package main

import (
	"fmt"
	"math"
)

// Function to calculate the distance between two points
func distance(x1, y1, x2, y2 float64) float64 {
    return math.Sqrt(math.Pow(x1-x2, 2) + math.Pow(y1-y2, 2))
}

// Function to check if a point is inside a circle
func isInsideCircle(x, y, cx, cy, r float64) bool {
    return distance(x, y, cx, cy) <= r
}

// Fungsi untuk mencetak watermark
func watermark() {
	fmt.Println("=================================")
	fmt.Println("Nama: Haposan Siregar")
	fmt.Println("NIM: 2311102210")
	fmt.Println("=================================")
}

func main() {
	watermark() // Menampilkan watermark

    var cx1, cy1, r1 float64
    var cx2, cy2, r2 float64
    var x, y float64

    // Input for Circle 1
    fmt.Println("Masukkan koordinat pusat lingkaran 1 (cx1 cy1) dan radius (r1):")
    fmt.Scan(&cx1, &cy1, &r1)

    // Input for Circle 2
    fmt.Println("Masukkan koordinat pusat lingkaran 2 (cx2 cy2) dan radius (r2):")
    fmt.Scan(&cx2, &cy2, &r2)

    // Input for the point
    fmt.Println("Masukkan koordinat titik sembarang (x y):")
    fmt.Scan(&x, &y)

    // Check position of the point relative to the circles
    inside1 := isInsideCircle(x, y, cx1, cy1, r1)
    inside2 := isInsideCircle(x, y, cx2, cy2, r2)

    // Determine output based on the position
    if inside1 && inside2 {
        fmt.Println("Titik di dalam lingkaran 1 dan 2")
    } else if inside1 {
        fmt.Println("Titik di dalam lingkaran 1")
    } else if inside2 {
        fmt.Println("Titik di dalam lingkaran 2")
    } else {
        fmt.Println("Titik di luar lingkaran 1 dan 2")
    }
}
